# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python build

on:
  workflow_dispatch:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        py -m pip install --upgrade pip
        pip install flake8 pytest build setuptools pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
    - name: Cache libvips
      id: cache-libvips
      uses: actions/cache@v4
      env:
        cache-name: cache-libvips
      with:
        path: |
          $RUNNER_TEMP/vips-dev-w64-all-8.10.5.zip
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    - if: ${{ steps.cache-libvips.outputs.cache-hit != 'true' }}    
      name: Download libvips
      continue-on-error: true
      working-directory: ${{ runner.temp }}
      run: |
        curl -O https://github.com/libvips/libvips/releases/download/v8.10.5/vips-dev-w64-all-8.10.5.zip

    - name: Extract libvips
      working-directory: ${{ runner.temp }}
      run: |
        tar -xvf vips-dev-w64-all-8.10.5.zip
        mkdir -p $WORKSPACE/lib64/libvips
        mv vips-dev-8.10/bin/*.dll $WORKSPACE/lib64/libvips/

    - name: Build Python Package
      run: py -m build

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: car-package
        path: dist/
        if-no-files-found: error
        retention-days: 1
          
    - name: Build PyInstaller Package
      run: pyinstaller car.spec

    - name: Upload PyInstaller Artifact
      uses: actions/upload-artifact@v4
      with:
        name: car-pyinstaller
        path: dist/car/
        if-no-files-found: error
        retention-days: 1
        
